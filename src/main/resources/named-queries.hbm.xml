<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping>

<hibernate-mapping>
    <!-- Comments -->
    <query name="getCommentsOfMethod">
        from Comment where method_id = :method_id
    </query>
    <sql-query name="insertComment">
        INSERT INTO
        comments(id,method_id,timestamp,username,text,in_response_to,root_comment_id,thumbsup,thumbsdown,thumbstotal)
        VALUES(:id,:methodId,:timestamp,:username,:text,:inResponseTo,:rootComment,0,0,0)
    </sql-query>
    <sql-query name="cleanUpComments">
        DELETE FROM comments
        WHERE method_id = :method_id
    </sql-query>
    <sql-query name="updateCommentVotes">
        UPDATE comments
        SET thumbsup = :thumbsUp, thumbsdown = :thumbsDown, thumbstotal = :thumbsTotal
        WHERE id = :commentId
    </sql-query>
    <sql-query name="cleanUpChildComments">
        DELETE FROM comments
        WHERE root_comment_id = :commentId
    </sql-query>
    <sql-query name="cleanUpCommentVotes">
        DELETE FROM commentvotes
        WHERE comment_id = :commentId
    </sql-query>
    <!-- Favorites -->
    <sql-query name="insertFavoriteId">
        INSERT INTO
        favorites(username,method_id)
        VALUES(?,?)
    </sql-query>
    <sql-query name="getFavoritesOfUser">
        <return alias="method" class="org.mobidics.model.MethodGerman"/>
        select method.* from methods_de method
        left join favorites favorite on (method.id=favorite.method_id)
        where favorite.username = :username
    </sql-query>
    <sql-query name="getFavoriteIdsOfUser">
        SELECT method_id FROM favorites WHERE username = :username
    </sql-query>

    <!-- Methods -->
    <query name="minMaxes">
        select new org.mobidics.model.MinMaxSummary(min(m.grouptype),max(m.grouptype),min(m.timeMax),max(m.timeMax))
        from MethodGerman m
    </query>
    <sql-query name="insertMethod_de">
        INSERT INTO
        methods_de(id,language,title,alternative_titles,socialform,phase,subphase,result,grouptype,coursetype,participants_min,participants_max,participants_comment,seating,time_min,time_max,time_comment,rating,ourrating,proceeding,phaseproceeding,variation,examples,tips,visualization,folder,haspictures,scope,hyperlinks,citations,vendor_id,date_created)
        VALUES(:uuid,:language,:title,:alternative_titles,:socialform,:phase,:subphase,:result,:grouptype,:coursetype,:participants_min,:participants_max,:participants_comment,:seating,:time_min,:time_max,:time_comment,:rating,:ourrating,:proceeding,:phaseproceeding,:variation,:examples,:tips,:visualization,:folder,:haspictures,:scope,:hyperlinks,:citations,:vendor_id,:date_created)
    </sql-query>
    <sql-query name="insertMethod_en">
        INSERT INTO
        methods_en(id,language,title,alternative_titles,socialform,phase,subphase,result,grouptype,coursetype,participants_min,participants_max,participants_comment,seating,time_min,time_max,time_comment,rating,ourrating,proceeding,phaseproceeding,variation,examples,tips,visualization,folder,haspictures,scope,hyperlinks,citations,vendor_id,date_created)
        VALUES(:uuid,:language,:title,:alternative_titles,:socialform,:phase,:subphase,:result,:grouptype,:coursetype,:participants_min,:participants_max,:participants_comment,:seating,:time_min,:time_max,:time_comment,:rating,:ourrating,:proceeding,:phaseproceeding,:variation,:examples,:tips,:visualization,:folder,:haspictures,:scope,:hyperlinks,:citations,:vendor_id,:date_created)
    </sql-query>
    <sql-query name="insertMethod_fr">
        INSERT INTO
        methods_fr(id,language,title,alternative_titles,socialform,phase,subphase,result,grouptype,coursetype,participants_min,participants_max,participants_comment,seating,time_min,time_max,time_comment,rating,ourrating,proceeding,phaseproceeding,variation,examples,tips,visualization,folder,haspictures,scope,hyperlinks,citations,vendor_id,date_created)
        VALUES(:uuid,:language,:title,:alternative_titles,:socialform,:phase,:subphase,:result,:grouptype,:coursetype,:participants_min,:participants_max,:participants_comment,:seating,:time_min,:time_max,:time_comment,:rating,:ourrating,:proceeding,:phaseproceeding,:variation,:examples,:tips,:visualization,:folder,:haspictures,:scope,:hyperlinks,:citations,:vendor_id,:date_created)
    </sql-query>
    <sql-query name="insertMethod_es">
        INSERT INTO
        methods_es(id,language,title,alternative_titles,socialform,phase,subphase,result,grouptype,coursetype,participants_min,participants_max,participants_comment,seating,time_min,time_max,time_comment,rating,ourrating,proceeding,phaseproceeding,variation,examples,tips,visualization,folder,haspictures,scope,hyperlinks,citations,vendor_id,date_created)
        VALUES(:uuid,:language,:title,:alternative_titles,:socialform,:phase,:subphase,:result,:grouptype,:coursetype,:participants_min,:participants_max,:participants_comment,:seating,:time_min,:time_max,:time_comment,:rating,:ourrating,:proceeding,:phaseproceeding,:variation,:examples,:tips,:visualization,:folder,:haspictures,:scope,:hyperlinks,:citations,:vendor_id,:date_created)
    </sql-query>
    <sql-query name="updateMethod_de">
        UPDATE methods_de
        SET title = :title, alternative_titles = :alternative_titles, socialform = :socialform, phase = :phase,
        subphase = :subphase, result = :result, grouptype = :grouptype, coursetype = :coursetype,
        participants_min = :participants_min, participants_max = :participants_max,
        participants_comment = :participants_comment, seating = :seating,
        time_min = :time_min, time_max = :time_max, time_comment = :time_comment,rating = :rating,
        ourrating = :ourrating, proceeding = :proceeding, phaseproceeding = :phaseproceeding,
        variation = :variation, examples = :examples, tips = :tips, visualization = :visualization,
        haspictures = :haspictures, scope = :scope, hyperlinks = :hyperlinks, citations = :citations
        WHERE id = :methodId
    </sql-query>
    <sql-query name="updateMethodDeRating">
        UPDATE methods_de
        SET userrating = :userrating
        WHERE id = :methodId
    </sql-query>

    <!-- User -->
    <query name="allUsers">from User</query>
    <query name="authenticate">from User where username = :username and password = :password</query>
    <sql-query name="updateLastActionDate">
        UPDATE users SET timestamp = :timestamp
        WHERE username = :username
    </sql-query>
    <sql-query name="createUser">
        INSERT INTO
        users(username,password,email,timestamp,userlevel,language,firstname,lastname,gender,userstatus,userstatus_other,usertype,usertype_other,university_id)
        VALUES(:username,:password,:email,:timestamp,:userlevel,:language,:firstname,:lastname,:gender,:userstatus,:userstatus_other,:usertype,:usertype_other,:university_id)
    </sql-query>
    <sql-query name="updateUser">
        UPDATE users SET email = :email, timestamp = :timestamp, firstname = :firstname, lastname = :lastname, gender =
        :gender, userstatus = :userstatus, userstatus_other = :userstatus_other, usertype = :usertype, usertype_other =
        :usertype_other, university_id = :university_id,faculty_id = :faculty_id, birthday = :birthday, department =
        :department, experience = :experience, language = :language
        WHERE username = :username
    </sql-query>

    <!-- Rating -->
    <query name="getRatingsOfMethodWithId">
        from Rating
        where method_id = :methodId
    </query>
    <sql-query name="cleanUpRatings">
        DELETE FROM ratings
        WHERE method_id = :method_id
    </sql-query>

</hibernate-mapping>
